{"version":3,"sources":["components/Movie.js","components/Page.js","components/Navigation.js","routes/Popular.js","routes/TopRate.js","App.js","index.js"],"names":["Movie","title","date","overview","poster","className","src","alt","Page","getPrevPage","getNextPage","page","total_pages","onClick","Navigation","to","Popular","props","console","log","getMoviesBytitle","event","a","async","searchitm","target","value","new_url","Axios","get","data","setState","url","isLoading","db","getMovieList","state","this","href","onChange","bind","placeholder","results","map","movie","key","id","release_date","poster_path","React","Component","TopRate","App","basename","window","location","pathname","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0df5965a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nfunction Movie({ title, date, overview, poster }) {\r\n  return (\r\n    <div className=\"movies_movie\">\r\n      <img src={poster} alt={title} title={title}></img>\r\n      <div className=\"movie_data\">\r\n        <h3 className=\"movie_title\">{title}</h3>\r\n        <h5 className=\"movie_date\">{date}</h5>\r\n        <p className=\"overview\">{overview}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  overview: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired\r\n  // pages: PropTypes.number.isRequired,\r\n  // page: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Page.css\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nfunction Page({ getPrevPage, getNextPage, page, total_pages }) {\r\n  if (page === 1) {\r\n    return (\r\n      <div className=\"footer\">\r\n        <div className=\"currnet\">\r\n          {page}/{total_pages}\r\n        </div>\r\n        <div className=\"next\" onClick={() => getNextPage()}>\r\n          Next &rarr;\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (page === total_pages) {\r\n    return (\r\n      <div className=\"footer\">\r\n        <div className=\"prev\" onClick={() => getPrevPage()}>\r\n          &larr; Prev\r\n        </div>\r\n        <div className=\"currnet\">\r\n          {page}/{total_pages}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"footer\">\r\n        <div className=\"prev\" onClick={() => getPrevPage()}>\r\n          &larr; Prev\r\n        </div>\r\n        <div className=\"currnet\">\r\n          {page}/{total_pages}\r\n        </div>\r\n        <div className=\"next\" onClick={() => getNextPage()}>\r\n          Next &rarr;\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPage.propTypes = {\r\n  page: PropTypes.number.isRequired,\r\n  total_pages: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport \"./Navigation.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <ul>\r\n      <Link to=\"/Popular\">\r\n        <li>Popular</li>\r\n      </Link>\r\n      <Link to=\"/TopRate\">\r\n        <li>Top rated</li>\r\n      </Link>\r\n      <li>Upcoming</li>\r\n      <li>Now playing</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./Common.css\";\r\nimport Axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport Page from \"../components/Page\";\r\nimport Navigation from \"../components/Navigation\";\r\n\r\nclass Popular extends React.Component {\r\n  constructor(props) {\r\n    console.log(\"this is initializer\");\r\n    super(props);\r\n\r\n    this.state = {\r\n      url:\r\n        \"https://api.themoviedb.org/3/movie/popular?api_key=b1306395631dc84cde154096963c13db&language=en-US\",\r\n      isLoading: true,\r\n      page: 1,\r\n      total_pages: 1,\r\n      db: []\r\n    };\r\n  }\r\n\r\n  //component update by searching title\r\n  getMoviesBytitle = async event => {\r\n    const searchitm = event.target.value;\r\n    const new_url =\r\n      \"https://api.themoviedb.org/3/search/movie?api_key=b1306395631dc84cde154096963c13db&language=en-US\" +\r\n      \"&query=\" +\r\n      searchitm;\r\n    const { data } = await Axios.get(new_url);\r\n    this.setState({\r\n      url: new_url,\r\n      isLoading: false,\r\n      db: data,\r\n      page: data.page,\r\n      total_pages: data.total_pages\r\n    });\r\n  };\r\n\r\n  getMovieList = async page => {\r\n    console.log(page);\r\n    const new_url = this.state.url + \"&page=\" + page;\r\n    const { data } = await Axios.get(new_url);\r\n    this.setState({\r\n      url: new_url,\r\n      isLoading: false,\r\n      db: data,\r\n      page: data.page,\r\n      total_pages: data.total_pages\r\n    });\r\n  };\r\n\r\n  //right after render\r\n  componentDidMount() {\r\n    console.log(\"rendered\");\r\n    this.getMovieList(1);\r\n  }\r\n\r\n  getNextPage = async () => {\r\n    this.getMovieList(this.state.page + 1);\r\n  };\r\n\r\n  getPrevPage = () => {\r\n    this.getMovieList(this.state.page - 1);\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, db, page, total_pages } = this.state;\r\n    return (\r\n      <div className=\"Home\">\r\n        <header>\r\n          <a href=\"/\">\r\n            <h1>The MovieDB</h1>\r\n          </a>\r\n        </header>\r\n\r\n        <div className=\"nav\">\r\n          <Navigation></Navigation>\r\n          <input\r\n            onChange={this.getMoviesBytitle.bind()}\r\n            placeholder=\"Enter Search Items\"\r\n            className=\"inputbox\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"container\">\r\n          <h2 className=\"title\">Popular Movies</h2>\r\n          <div className=\"contents\">\r\n            {isLoading ? (\r\n              <div className=\"loading\">\r\n                <span className=\"load_text\">Loading..</span>\r\n              </div>\r\n            ) : (\r\n              db.results.map(movie => (\r\n                <Movie\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.title}\r\n                  date={movie.release_date}\r\n                  overview={movie.overview}\r\n                  poster={\"http://image.tmdb.org/t/p/w185\" + movie.poster_path}\r\n                ></Movie>\r\n              ))\r\n            )}\r\n          </div>\r\n          <Page\r\n            getPrevPage={this.getPrevPage}\r\n            getNextPage={this.getNextPage}\r\n            page={page}\r\n            total_pages={total_pages}\r\n          ></Page>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Popular;\r\n","import React from \"react\";\r\nimport \"./Common.css\";\r\nimport Axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport Page from \"../components/Page\";\r\nimport Navigation from \"../components/Navigation\";\r\n\r\nclass TopRate extends React.Component {\r\n  constructor(props) {\r\n    console.log(\"this is initializer\");\r\n    super(props);\r\n\r\n    this.state = {\r\n      url:\r\n        \"https://api.themoviedb.org/3/movie/top_rated?api_key=b1306395631dc84cde154096963c13db&language=en-US\",\r\n      isLoading: true,\r\n      page: 1,\r\n      total_pages: 1,\r\n      db: []\r\n    };\r\n  }\r\n\r\n  //component update by searching title\r\n  getMoviesBytitle = async event => {\r\n    const searchitm = event.target.value;\r\n    const new_url =\r\n      \"https://api.themoviedb.org/3/search/movie?api_key=b1306395631dc84cde154096963c13db&language=en-US\" +\r\n      \"&query=\" +\r\n      searchitm;\r\n    const { data } = await Axios.get(new_url);\r\n    this.setState({\r\n      url: new_url,\r\n      isLoading: false,\r\n      db: data,\r\n      page: data.page,\r\n      total_pages: data.total_pages\r\n    });\r\n  };\r\n\r\n  getMovieList = async page => {\r\n    console.log(page);\r\n    const new_url = this.state.url + \"&page=\" + page;\r\n    const { data } = await Axios.get(new_url);\r\n    this.setState({\r\n      url: new_url,\r\n      isLoading: false,\r\n      db: data,\r\n      page: data.page,\r\n      total_pages: data.total_pages\r\n    });\r\n  };\r\n\r\n  //right after render\r\n  componentDidMount() {\r\n    console.log(\"rendered\");\r\n    this.getMovieList(1);\r\n  }\r\n\r\n  getNextPage = () => {\r\n    this.getMovieList(this.state.page + 1);\r\n  };\r\n\r\n  getPrevPage = () => {\r\n    this.getMovieList(this.state.page - 1);\r\n  };\r\n\r\n  render() {\r\n    console.log(\"rendering\");\r\n    const { isLoading, db, page, total_pages } = this.state;\r\n    return (\r\n      <div className=\"Home\">\r\n        <header>\r\n          <a href=\"/\">\r\n            <h1>The MovieDB</h1>\r\n          </a>\r\n        </header>\r\n\r\n        <div className=\"nav\">\r\n          <Navigation></Navigation>\r\n          <input\r\n            onChange={this.getMoviesBytitle.bind()}\r\n            placeholder=\"Enter Search Items\"\r\n            className=\"inputbox\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"container\">\r\n          <h2 className=\"title\">Top Rated Movies</h2>\r\n          <div className=\"contents\">\r\n            {isLoading ? (\r\n              <div className=\"loading\">\r\n                <span className=\"load_text\">Loading..</span>\r\n              </div>\r\n            ) : (\r\n              db.results.map(movie => (\r\n                <Movie\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.title}\r\n                  date={movie.release_date}\r\n                  overview={movie.overview}\r\n                  poster={\"http://image.tmdb.org/t/p/w185\" + movie.poster_path}\r\n                ></Movie>\r\n              ))\r\n            )}\r\n          </div>\r\n          <Page\r\n            getPrevPage={this.getPrevPage}\r\n            getNextPage={this.getNextPage}\r\n            page={page}\r\n            total_pages={total_pages}\r\n          ></Page>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopRate;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Popular from \"./routes/Popular\";\r\nimport TopRate from \"./routes/TopRate\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={window.location.pathname || \"\"}>\r\n      <Route path=\"/\" exact={true} component={Popular}></Route>\r\n      <Route path=\"/popular\" component={Popular}></Route>\r\n      <Route path=\"/TopRate\" exact={true} component={TopRate}></Route>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}